// default package
// Generated 1 janv. 2015 18:48:45 by Hibernate Tools 3.4.0.CR1


package com.monyLady.myapp.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name = "customer", catalog = "monylady", uniqueConstraints = @UniqueConstraint(columnNames = "personID"))
public class Customer implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer customerId;
	private Person person;
	private String firstName;
	private String middleName;
	private String lastName;
	private Date dateOfBirth;
	private Set<WishList> wishLists = new HashSet<WishList>(0);
	private Set<Orders> orderses = new HashSet<Orders>(0);
	private Set<ServiceCase> serviceCases = new HashSet<ServiceCase>(0);
	private Set<Review> reviews = new HashSet<Review>(0);

	public Customer() {
	}

	public Customer(Person person, String firstName, String lastName) {
		this.person = person;
		this.firstName = firstName;
		this.lastName = lastName;
	}

	public Customer(Person person, String firstName, String middleName,
			String lastName, Date dateOfBirth, Set<WishList> wishLists,
			Set<Orders> orderses, Set<ServiceCase> serviceCases,
			Set<Review> reviews) {
		this.person = person;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.dateOfBirth = dateOfBirth;
		this.wishLists = wishLists;
		this.orderses = orderses;
		this.serviceCases = serviceCases;
		this.reviews = reviews;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "customerID", unique = true, nullable = false)
	public Integer getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(Integer customerId) {
		this.customerId = customerId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "personID", unique = true, nullable = false)
	public Person getPerson() {
		return this.person;
	}

	public void setPerson(Person person) {
		this.person = person;
	}

	@Column(name = "firstName", nullable = false, length = 20)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "middleName", length = 20)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "lastName", nullable = false, length = 30)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateOfBirth", length = 10)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<WishList> getWishLists() {
		return this.wishLists;
	}

	public void setWishLists(Set<WishList> wishLists) {
		this.wishLists = wishLists;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Orders> getOrderses() {
		return this.orderses;
	}

	public void setOrderses(Set<Orders> orderses) {
		this.orderses = orderses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<ServiceCase> getServiceCases() {
		return this.serviceCases;
	}

	public void setServiceCases(Set<ServiceCase> serviceCases) {
		this.serviceCases = serviceCases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Review> getReviews() {
		return this.reviews;
	}

	public void setReviews(Set<Review> reviews) {
		this.reviews = reviews;
	}

}
