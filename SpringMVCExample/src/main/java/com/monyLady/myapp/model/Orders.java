// default package
// Generated 1 janv. 2015 18:48:45 by Hibernate Tools 3.4.0.CR1


package com.monyLady.myapp.model;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "orders", catalog = "monylady")
public class Orders implements java.io.Serializable {

	private Integer orderId;
	private Customer customer;
	private int numOfItems;
	private BigDecimal itemSubtotal;
	private BigDecimal shippingTotal;
	private BigDecimal salesTaxPaid;
	private Date timePlaced;
	private Date timeShipped;
	private String transactNumber;
	private Set<ItemsOrdered> itemsOrdereds = new HashSet<ItemsOrdered>(0);

	public Orders() {
	}

	public Orders(Customer customer, int numOfItems, BigDecimal itemSubtotal,
			BigDecimal shippingTotal, BigDecimal salesTaxPaid, Date timePlaced,
			Date timeShipped) {
		this.customer = customer;
		this.numOfItems = numOfItems;
		this.itemSubtotal = itemSubtotal;
		this.shippingTotal = shippingTotal;
		this.salesTaxPaid = salesTaxPaid;
		this.timePlaced = timePlaced;
		this.timeShipped = timeShipped;
	}

	public Orders(Customer customer, int numOfItems, BigDecimal itemSubtotal,
			BigDecimal shippingTotal, BigDecimal salesTaxPaid, Date timePlaced,
			Date timeShipped, String transactNumber,
			Set<ItemsOrdered> itemsOrdereds) {
		this.customer = customer;
		this.numOfItems = numOfItems;
		this.itemSubtotal = itemSubtotal;
		this.shippingTotal = shippingTotal;
		this.salesTaxPaid = salesTaxPaid;
		this.timePlaced = timePlaced;
		this.timeShipped = timeShipped;
		this.transactNumber = transactNumber;
		this.itemsOrdereds = itemsOrdereds;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "orderID", unique = true, nullable = false)
	public Integer getOrderId() {
		return this.orderId;
	}

	public void setOrderId(Integer orderId) {
		this.orderId = orderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customerID", nullable = false)
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@Column(name = "numOfItems", nullable = false)
	public int getNumOfItems() {
		return this.numOfItems;
	}

	public void setNumOfItems(int numOfItems) {
		this.numOfItems = numOfItems;
	}

	@Column(name = "itemSubtotal", nullable = false, precision = 10)
	public BigDecimal getItemSubtotal() {
		return this.itemSubtotal;
	}

	public void setItemSubtotal(BigDecimal itemSubtotal) {
		this.itemSubtotal = itemSubtotal;
	}

	@Column(name = "shippingTotal", nullable = false, precision = 8)
	public BigDecimal getShippingTotal() {
		return this.shippingTotal;
	}

	public void setShippingTotal(BigDecimal shippingTotal) {
		this.shippingTotal = shippingTotal;
	}

	@Column(name = "salesTaxPaid", nullable = false, precision = 8)
	public BigDecimal getSalesTaxPaid() {
		return this.salesTaxPaid;
	}

	public void setSalesTaxPaid(BigDecimal salesTaxPaid) {
		this.salesTaxPaid = salesTaxPaid;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "timePlaced", nullable = false, length = 19)
	public Date getTimePlaced() {
		return this.timePlaced;
	}

	public void setTimePlaced(Date timePlaced) {
		this.timePlaced = timePlaced;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "timeShipped", nullable = false, length = 19)
	public Date getTimeShipped() {
		return this.timeShipped;
	}

	public void setTimeShipped(Date timeShipped) {
		this.timeShipped = timeShipped;
	}

	@Column(name = "transactNumber", length = 20)
	public String getTransactNumber() {
		return this.transactNumber;
	}

	public void setTransactNumber(String transactNumber) {
		this.transactNumber = transactNumber;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<ItemsOrdered> getItemsOrdereds() {
		return this.itemsOrdereds;
	}

	public void setItemsOrdereds(Set<ItemsOrdered> itemsOrdereds) {
		this.itemsOrdereds = itemsOrdereds;
	}

}
