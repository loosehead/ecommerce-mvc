// default package
// Generated 1 janv. 2015 18:48:45 by Hibernate Tools 3.4.0.CR1


package com.monyLady.myapp.model;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Subcategory generated by hbm2java
 */
@Entity
@Table(name = "subcategory", catalog = "monylady")
public class Subcategory implements java.io.Serializable {

	private Integer subcategoryId;
	private Category category;
	private String subcategoryName;
	private Set<Product> products = new HashSet<Product>(0);

	public Subcategory() {
	}

	public Subcategory(Category category, String subcategoryName) {
		this.category = category;
		this.subcategoryName = subcategoryName;
	}

	public Subcategory(Category category, String subcategoryName,
			Set<Product> products) {
		this.category = category;
		this.subcategoryName = subcategoryName;
		this.products = products;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "subcategoryID", unique = true, nullable = false)
	public Integer getSubcategoryId() {
		return this.subcategoryId;
	}

	public void setSubcategoryId(Integer subcategoryId) {
		this.subcategoryId = subcategoryId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "categoryID", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "subcategoryName", nullable = false, length = 30)
	public String getSubcategoryName() {
		return this.subcategoryName;
	}

	public void setSubcategoryName(String subcategoryName) {
		this.subcategoryName = subcategoryName;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "subcategory")
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

}
